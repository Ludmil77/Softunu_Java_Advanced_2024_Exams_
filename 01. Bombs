import java.util.*;
import java.util.stream.Collectors;

public class _01_Bombs
{
    public static void main(String[] args)
    {
         Scanner scanner = new Scanner(System.in);
         Map<String, Integer> items = new TreeMap<>();
         items.put("Datura Bombs", 0); items.put("Cherry Bombs", 0); items.put("Smoke Decoy Bombs", 0);
        List<Integer> effects = Arrays.stream(scanner.nextLine().split(", "))
                .map(Integer::parseInt).collect(Collectors.toList());
        List<Integer> casings = Arrays.stream(scanner.nextLine().split(", "))
                .map(Integer::parseInt).collect(Collectors.toList());
        Collections.reverse(casings);

        while(!effects.isEmpty() && !casings.isEmpty())
        {
            int sum = effects.get(0) + casings.get(0);
            if(sum == 40)
            {
                items.put("Datura Bombs", items.get("Datura Bombs") + 1);
            }
            else if(sum == 60)
            {
                items.put("Cherry Bombs", items.get("Cherry Bombs") + 1);
            }
            else if(sum == 120)
            {
                items.put("Smoke Decoy Bombs", items.get("Smoke Decoy Bombs") + 1);
            }
            else
            {
                casings.set(0, casings.get(0) - 5);
                continue;
            }

            effects.remove(0);
            casings.remove(0);
            if(isItemsThreeOfAlls(items))
            {
                break;
            }
        }
        if(isItemsThreeOfAlls(items))
        {
            System.out.println("Bene! You have successfully filled the bomb pouch!");
        }
        else
        {
            System.out.println("You don't have enough materials to fill the bomb pouch.");
        }
        printBombEffects(effects);
        printBombCasings(casings);
        printItems(items);
    }
    public static boolean isItemsThreeOfAlls(Map<String, Integer> items)
    {
        if(items.get("Datura Bombs") >= 3 && items.get("Cherry Bombs") >= 3 && items.get("Smoke Decoy Bombs") >= 3)
        {
            return true;
        }
        return false;
    }
    public static void printBombEffects(List<Integer> effects)
    {
        if(effects.isEmpty())
        {
            System.out.println("Bomb Effects: empty");
        }
        else
        {
            List<String> temp = new ArrayList<>();
            for(Integer effect : effects)
            {
                temp.add(String.valueOf(effect));
            }
            System.out.println("Bomb Effects: " + String.join(", ", temp));
        }
    }
    public static void printBombCasings(List<Integer> casings)
    {
        if(casings.isEmpty())
        {
            System.out.println("Bomb Casings: empty");
        }
        else
        {
            List<String> temp = new ArrayList<>();
            for(Integer casing : casings)
            {
                temp.add(String.valueOf(casing));
            }
            System.out.println("Bomb Casings: " + String.join(", ", temp));
        }
    }
    public static void printItems( Map<String, Integer> items)
    {
        for(String key : items.keySet())
        {
            System.out.printf("%s: %d%n", key, items.get(key));
        }
    }
}
