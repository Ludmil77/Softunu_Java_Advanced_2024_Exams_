import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;


public class _01_O_Planing
{
    public static void main(String[] args)
    {
        Scanner scanner = new Scanner(System.in);
        List<Integer> tasks = Arrays.stream(scanner.nextLine().split(", "))
                .map(Integer::parseInt).collect(Collectors.toList());
        List<Integer> threads = Arrays.stream(scanner.nextLine().split(" "))
                .map(Integer::parseInt).collect(Collectors.toList());
        int killedTask = Integer.parseInt(scanner.nextLine());
        Collections.reverse(tasks);
        while(true)
        {
             if(tasks.get(0) != killedTask)
             {
                 if(threads.get(0) >= tasks.get(0))
                 {
                     threads.remove(0);
                     tasks.remove(0);
                 }
                 else
                 {
                     threads.remove(0);
                 }
             }
             else
             {
                 System.out.printf("Thread with value %d killed task %d%n", threads.get(0), killedTask);
                 break;
             }
        }
        if(!threads.isEmpty())
        {
            for(Integer thread : threads)
            {
                System.out.print(thread + " ");
            }
        }
        return;
    }
}
