import java.util.Arrays;
import java.util.Scanner;

public class _02_Delivery_Boy
{
    public static void main(String[] args)
    {
        Scanner scanner = new Scanner(System.in);
        int[] sizes = Arrays
            .stream(scanner.nextLine().split(" "))
            .mapToInt(Integer::parseInt).toArray();
        int rows = sizes[0];
        int cols = sizes[1];
        int rowB = 0;
        int colB = 0;
        boolean isOutOfMatrix = false;
        String[][] matrix = new String[rows][cols];
        for(int row = 0; row < rows; row++)
        {
            String input = scanner.nextLine();
            String[] arr = input.split("");
            matrix[row] = arr;
            if(input.contains("B"))
            {
                rowB = row;
                colB = input.indexOf("B");
            }
        }
        int[] initialPositions = {rowB, colB};
        String command = scanner.nextLine();
        while(true)
        {

           //up", "down", "right", and "left".
            int previousRow = rowB;
            int previousCol = colB;
           if(command.equals("up"))
           {
               rowB--;
           }
           if(command.equals("down"))
           {
               rowB++;
           }
           if(command.equals("left"))
           {
               colB--;
           }
           if(command.equals("right"))
           {
               colB++;
           }
           if(rowB < 0 || rowB > rows - 1 || colB < 0 || colB > cols - 1)
           {
               isOutOfMatrix = true;
               rowB = previousRow;
               colB = previousCol;
               System.out.println("The delivery is late. Order is canceled.");
               break;
           }
           if(matrix[rowB][colB].equals("*"))
           {
               rowB = previousRow;
               colB = previousCol;
               command = scanner.nextLine();
               continue;
           }
           if(matrix[rowB][colB].equals("-"))
           {
               matrix[rowB][colB] = ".";
           }
           if(matrix[rowB][colB].equals("P"))
           {
               matrix[rowB][colB] = "R";
               System.out.println("Pizza is collected. 10 minutes for delivery.");
           }
           if(matrix[rowB][colB].equals("A"))
           {
               matrix[rowB][colB] = "P";
               System.out.println("Pizza is delivered on time! Next order...");
               break;
           }
           command = scanner.nextLine();
        }
        printFinalState(matrix, isOutOfMatrix, initialPositions, rows, cols);
    }
    public static void printFinalState(String[][] matrix,  boolean isOutOfMatrix, int[] initialPositions, int rows, int cols)
    {
        if(isOutOfMatrix)
        {
            matrix[initialPositions[0]][initialPositions[1]] = " ";
        }
        for(int row = 0; row < rows; row++)
        {
            for(int col = 0; col < cols; col++)
            {
                System.out.print(matrix[row][col]);
            }
            System.out.println();
        }
    }
}
