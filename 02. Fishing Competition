import java.util.Scanner;

public class _02_Fishing_Competition
{
    public static void main(String[] args)
    {
        Scanner scanner = new Scanner(System.in);
        int size = Integer.parseInt(scanner.nextLine());
        int rowS = -1;
        int colS = -1;
        int fishCol = -1;
        boolean isFind = false;
        int countFish = 0;
        String[][] matrix = new String[size][size];
        for(int row = 0; row < size; row++)
        {
            String input = scanner.nextLine();
            String[] arr = input.split("");
            matrix[row] = arr;
            fishCol = input.indexOf("S");
            if(fishCol >= 0 && !isFind)
            {
                rowS = row;
                colS = fishCol;
                isFind = true;
            }
        }
        String command = scanner.nextLine();
        while(!command.equals("collect the nets"))
        {
            //up", "down", "left", and "right"
            matrix[rowS][colS] = "-";
            if(command.equals("up"))
            {
                rowS--;
                rowS = checkIfRowIsValid(rowS, size);
            }
            if(command.equals("down"))
            {
                rowS++;
                rowS = checkIfRowIsValid(rowS, size);
            }
            if(command.equals("left"))
            {
                colS--;
                colS = checkIfColIsValid(colS, size);
            }
            if(command.equals("right"))
            {
                colS++;
                colS = checkIfColIsValid(colS, size);
            }
            if(matrix[rowS][colS].equals("W"))
            {
                System.out.printf("You fell into a whirlpool! The ship sank and you lost the fish you caught. Last coordinates of the ship: [%d,%d]%n", rowS, colS);
                return;
            }
            if(Character.isDigit(matrix[rowS][colS].charAt(0)))
            {
                countFish += Integer.parseInt(matrix[rowS][colS]);

                matrix[rowS][colS] = "-";
            }

            command = scanner.nextLine();
        }
        if(command.equals("collect the nets") && countFish < 20)
        {
            System.out.printf("You didn't catch enough fish and didn't reach the quota! You need %d tons of fish more.%n", 20 - countFish);
            if(countFish > 0)
            {
                System.out.printf("Amount of fish caught: %d tons.%n", countFish);
            }

        }
        if(countFish >= 20)
        {
            System.out.println("Success! You managed to reach the quota!");
            System.out.printf("Amount of fish caught: %d tons.%n", countFish);

        }
        matrix[rowS][colS] = "S";
        printFinalState(matrix, size);
    }
    public static Integer checkIfRowIsValid(int rowS, int size)
    {
        if(rowS == -1)
        {
            rowS = size - 1;
        }
        else if(rowS == size)
        {
            rowS = 0;
        }
        return rowS;
    }
    public static Integer checkIfColIsValid(int colS, int size)
    {
        if(colS == -1)
        {
            colS = size - 1;
        }
        else if(colS == size)
        {
            colS = 0;
        }
        return colS;
    }
    public static void printFinalState(String[][] matrix, int size)
    {
          for(int row = 0; row < size; row++)
          {
              for(int col = 0; col < size; col++)
              {
                  System.out.print(matrix[row][col]);
              }
              System.out.println();
          }
    }
}
